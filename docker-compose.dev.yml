version: "3.9"

services:
    ocr_api_srv_dev:
      image: fast_ocr
      build:
        context: .
      container_name: ocr_api_srv_dev
      restart: always
      depends_on:
      - db_dev
      command: bash -c "bash /tmp/api-envsubst-log-ini.sh && alembic upgrade head && python main.py"
      env_file:
        - ./env/.env.ocr_api_srv.dev
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
        - DATABSE_PORT=${DATABSE_PORT}
      volumes:
        - ./app:/code:ro
        - ${UPLOAD_DIR_HOST}:${UPLOAD_DIR_CONT}:rw
        - ${APP_LOG_DIR_HOST}:${APP_LOG_DIR_CONT}:rw
      ports:
        - ${API_PORT}:${API_PORT}
      links:
        - "db_dev:db"

    db_dev:
      image: postgres:latest
      container_name: postgresql_db
      restart: always
      env_file:
        - ./env/.env.db.dev
      ports:
        - 5432:5432
      volumes:
        - pgdata:/var/lib/postgresql/data


  # proxy:
  #   build: 
  #     context: ./proxy
  #   image: ocr_nginx
  #   container_name: nginx_proxy
  #   restart: always
  #   command: "env;/run.sh"
  #   # depends_on: 
  #   #   - ocr_api_srv 
  #   env_file:
  #     - ./env/.env.prod
  #   ports: 
  #     - ${NGINX_LESTEN_PORT_HOST}:${NGINX_LESTEN_PORT_CONT}
  #   volumes: 
  #     - ${MEDIA_ROOT_REL}:/vol/web/uploads:rw
  #     - ${STATIC_ROOT_REL}:/vol/web/static:ro
  #     - ${NGINX_LOG_DIR_HOST}:${NGINX_LOG_DIR_CONT}:rw
  #   links:
  #     - ocr_api_srv:${API_CONT_DOMAIN}


volumes:
    pgdata:
        external: true 
