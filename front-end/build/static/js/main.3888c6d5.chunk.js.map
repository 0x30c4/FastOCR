{"version":3,"sources":["components/ImgCard.js","components/UploadCard.js","App.js","index.js"],"names":["onCopyText","createLink","url","window","location","protocol","host","split","ImgCard","imgText","imgUrl","cTime","useState","console","log","text","onCopy","className","onClick","newWindow","open","opener","openInNewTab","variant","src","UploadCard","onChangeHandler","onClickHandler","loaded","href","type","onChange","max","color","value","Math","round","App","props","imgQuery","event","setState","selectedFile","target","files","data","FormData","append","state","axios","post","onUploadProgress","ProgressEvent","total","then","res","toast","success","createTime","oriFileName","catch","err","error","getImgData","uuid","get","createdTime","this","hash","replace","length","md","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3888c6d5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n        Button, Card, CardBody, CardText,\n        CardImg, CardTitle, CardHeader, CardFooter\n} from 'reactstrap';\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\n\nconst onCopyText = () => {\n};\n\nfunction createLink(url){\n    return window.location.protocol + \"//\" + window.location.host + \"/#\" + url.split('uploads/')[1].split('.')[0]\n}\n\nfunction openInNewTab (url) {\n    url = createLink(url)\n    console.log(url)\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\n    if (newWindow) newWindow.opener = null\n}\n\n\nexport default function ImgCard ({ imgText, imgUrl, cTime}) {\n    const [text, setText] = useState(\"\");\n    const [isCopied, setIsCopied] = useState(false);\n    console.log(createLink(imgUrl))\n    return (\n        <Card >\n          <CardBody>\n            <CardHeader>\n                <h2>\n                    Image Text\n                </h2>\n            </CardHeader>\n            <hr/>\n            &nbsp;&nbsp;&nbsp;\n            <CopyToClipboard text={imgText} onCopy={onCopyText}>\n                <Button>Copy Text To Clipboard</Button>\n            </CopyToClipboard>\n            <Button className='mx-2' onClick={() => openInNewTab(imgUrl)}>\n                Open In an New Tab\n            </Button>\n            <CopyToClipboard text={createLink(imgUrl)} onCopy={onCopyText}>\n                <Button>Copy Image Link</Button>\n            </CopyToClipboard>\n\n            <hr/>\n            <CardText>\n                {imgText}\n            </CardText>\n          </CardBody>\n          <CardImg variant=\"bottom\" src={imgUrl}/>\n          <CardFooter>\n              Creation Time: {cTime}\n          </CardFooter>\n        </Card>\n    );\n}\n","import React from 'react';\nimport {\n        Card, CardBody, CardText, CardImg, CardTitle,\n        CardHeader, Button, FormGroup, Progress\n} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nexport default function UploadCard( { onChangeHandler, onClickHandler, loaded} ) {\n    return (\n        <Card >\n            <CardHeader>\n                <h2>\n                    Upload An Image\n                </h2>\n            </CardHeader>\n            <CardBody>\n                <CardText>\n                    Fast and Free OCR service. Extract text from <br/>\n                    any image with in few seconds. Simple Optical <br/>\n                    Character Recognition service. Maximum File <br/>\n                    upload size is 8MB. <br/>\n                    The <a href=\"https://github.com/0x30c4/fastOCR/\">GitHub Repo</a> link. <br/>\n                    API <a href=\"https://ocr.0x30c4.dev/api/docs\">Documentation</a> link.\n                </CardText>\n                <FormGroup>\n                    <input type=\"file\" className=\"form-control\" onChange={onChangeHandler}/>\n                </FormGroup>\n                <Button variant=\"primary\" onClick={onClickHandler}>Upload</Button>\n                <ToastContainer />\n                <br/>\n                <Progress max=\"100\" color=\"success\" value={loaded} >{Math.round(loaded,2) }%</Progress>\n            </CardBody>\n        </Card>\n    );\n}\n","import axios from 'axios';\nimport React, {Component} from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ImgCard from './components/ImgCard';\nimport UploadCard from './components/UploadCard';\nimport {\n        Container, Label, Button,\n        Row, Col, FormGroup\n} from 'reactstrap';\n\n\nexport default class App extends Component {;\n\n    host = window.location.protocol + \"//\" + window.location.host\n    imgQuery = false\n\n    constructor(props) {\n        super(props);\n            this.state = {\n            selectedFile: null,\n            imgUrl:  \"\",\n            imgText: \"\",\n            createdTime: \"\",\n            oriFileName: \"\"\n        }\n    }\n\n    componentDidMount () {\n\n        if (!this.imgQuery){\n            const uuid = window.location.hash.replace('#' , '')\n            if (uuid.length == 32){\n                this.imgQuery = true;\n                this.getImgData(uuid)\n            }\n        }\n    }\n\n    onChangeHandler = event =>{\n        this.setState({\n            selectedFile: event.target.files[0],\n            loaded: 0,\n        })\n    }\n\n    onClickHandler = () => {\n        const data = new FormData()\n\n        data.append('file', this.state.selectedFile)\n        axios.post(this.host + \"/api/image\", data, {\n            onUploadProgress: ProgressEvent => {\n                this.setState({\n                    loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n                    })\n                },\n            })\n          .then(res => { // then print response status\n            toast.success('upload success')\n              this.setState({\n                  imgUrl: res.data['url'],\n                  imgText: res.data['text'],\n                  createTime: res.data['time_created'],\n                  oriFileName: res.data['original_file_name']\n              })\n          })\n          .catch(err => { // then print response status\n            toast.error('upload fail')\n          })\n    }\n\n    getImgData = (uuid) => {\n        const url = this.host + \"/api/get_images/\" + uuid\n        axios.get(url)\n            .then((res) => {\n                this.setState({\n                  imgUrl: \"/uploads/\" + res.data['uuid'] + \".\" + res.data['file_ext'],\n                  imgText: res.data['text'],\n                  createTime: res.data['time_created'],\n                  oriFileName: res.data['original_file_name']\n            })\n            // window.iii = res.data\n        })\n            .catch((err) => {\n                toast.error(\"Can't get the image!\")\n        })\n    }\n\n    render () {\n        return (\n            <>\n                <Container>\n                    <br/>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            { !this.imgQuery ? (\n                                <UploadCard onChangeHandler={this.onChangeHandler} onClickHandler={this.onClickHandler} loaded={this.state.loaded}/>\n                            ) : (\n                                <div> </div>\n                            )}\n                        </Col>\n                    </Row>\n                    <br/>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            {this.state.imgUrl ? (\n                                <ImgCard imgUrl={this.state.imgUrl} cTime={this.state.createTime} imgText={this.state.imgText}/>\n                            ) : (\n                                <div></div>\n                            )}\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        );\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}